# Generated by Django 3.2 on 2021-04-18 15:53

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('isbn', models.CharField(help_text='13 characters', max_length=13, primary_key=True, serialize=False, verbose_name='ISBN')),
                ('title', models.CharField(max_length=100)),
                ('publisher', models.CharField(max_length=100)),
                ('publication_date', models.DateField()),
                ('subject', models.CharField(max_length=100)),
                ('keywords', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=30)),
                ('page_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('stock_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('address', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=10)),
                ('banned', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UnTrustedCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('untrusted_username', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='ut_untrusted_username', to='home.customer')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='ut_username', to='home.customer')),
            ],
        ),
        migrations.CreateModel(
            name='TrustedCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trusted_username', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='t_trusted_username', to='home.customer')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='t_username', to='home.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('time_asked', models.DateTimeField(auto_now_add=True)),
                ('time_answered', models.DateTimeField(auto_now=True)),
                ('question', models.TextField(max_length=300)),
                ('answer', models.TextField(max_length=300)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='home.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Offense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offense_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='home.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('comment_text', models.TextField(max_length=300)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('useless_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('useful_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('very_useful_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='home.book')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='home.customer')),
            ],
        ),
        migrations.CreateModel(
            name='BookOrder',
            fields=[
                ('order_number', models.AutoField(primary_key=True, serialize=False)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('order_time', models.DateTimeField(auto_now_add=True)),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='home.book')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='home.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='home.book')),
            ],
        ),
        migrations.AddConstraint(
            model_name='comment',
            constraint=models.UniqueConstraint(fields=('username', 'isbn'), name='unique comment'),
        ),
        migrations.AddConstraint(
            model_name='bookorder',
            constraint=models.UniqueConstraint(fields=('order_number', 'username', 'isbn'), name='unique item in order'),
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.UniqueConstraint(fields=('isbn', 'first_name', 'last_name'), name='unique record'),
        ),
    ]
